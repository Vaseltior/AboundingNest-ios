<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ANQHTTPOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ANQHTTPOperation</TokenIdentifier>
			<Abstract type="html">    ANQHTTPOperation is a general purpose NSOperation that runs an HTTP request. 
    You initialise it with an HTTP request and then, when you run the operation, 
    it sends the request and gathers the response.  It is quite a complex 
    object because it handles a wide variety of edge cases, but it's very 
    easy to use in simple cases:</Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/initWithRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (id)initWithRequest:(NSURLRequest *)request</Declaration>
			
			
			<Anchor>//api/name/initWithRequest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/initWithURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (id)initWithURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/initWithURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURLRequest *request</Declaration>
			
			
			<Anchor>//api/name/request</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/request</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURLRequest *request</Declaration>
			
			
			<Anchor>//api/name/request</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *URL</Declaration>
			
			
			<Anchor>//api/name/URL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/URL</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURL *URL</Declaration>
			
			
			<Anchor>//api/name/URL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setAcceptableStatusCodes:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSIndexSet *acceptableStatusCodes</Declaration>
			
			
			<Anchor>//api/name/acceptableStatusCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/acceptableStatusCodes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSIndexSet *acceptableStatusCodes</Declaration>
			
			
			<Anchor>//api/name/acceptableStatusCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setAcceptableContentTypes:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSSet *acceptableContentTypes</Declaration>
			
			
			<Anchor>//api/name/acceptableContentTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/acceptableContentTypes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSSet *acceptableContentTypes</Declaration>
			
			
			<Anchor>//api/name/acceptableContentTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setAuthenticationDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) id&lt;ANQHTTPOperationAuthenticationDelegate&gt; authenticationDelegate</Declaration>
			
			
			<Anchor>//api/name/authenticationDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/authenticationDelegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) id&lt;ANQHTTPOperationAuthenticationDelegate&gt; authenticationDelegate</Declaration>
			
			
			<Anchor>//api/name/authenticationDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setDebugError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSError *debugError</Declaration>
			
			
			<Anchor>//api/name/debugError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/debugError</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readwrite) NSError *debugError</Declaration>
			
			
			<Anchor>//api/name/debugError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setDebugDelay:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSTimeInterval debugDelay</Declaration>
			
			
			<Anchor>//api/name/debugDelay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/debugDelay</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSTimeInterval debugDelay</Declaration>
			
			
			<Anchor>//api/name/debugDelay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setResponseOutputStream:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSOutputStream *responseOutputStream</Declaration>
			
			
			<Anchor>//api/name/responseOutputStream</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/responseOutputStream</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSOutputStream *responseOutputStream</Declaration>
			
			
			<Anchor>//api/name/responseOutputStream</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setDefaultResponseSize:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSUInteger defaultResponseSize</Declaration>
			
			
			<Anchor>//api/name/defaultResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/defaultResponseSize</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSUInteger defaultResponseSize</Declaration>
			
			
			<Anchor>//api/name/defaultResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setMaximumResponseSize:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSUInteger maximumResponseSize</Declaration>
			
			
			<Anchor>//api/name/maximumResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/maximumResponseSize</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) NSUInteger maximumResponseSize</Declaration>
			
			
			<Anchor>//api/name/maximumResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setStatusCodeAcceptable:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isStatusCodeAcceptable) BOOL statusCodeAcceptable</Declaration>
			
			
			<Anchor>//api/name/statusCodeAcceptable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/statusCodeAcceptable</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isStatusCodeAcceptable) BOOL statusCodeAcceptable</Declaration>
			
			
			<Anchor>//api/name/statusCodeAcceptable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setContentTypeAcceptable:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isContentTypeAcceptable) BOOL contentTypeAcceptable</Declaration>
			
			
			<Anchor>//api/name/contentTypeAcceptable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/contentTypeAcceptable</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isContentTypeAcceptable) BOOL contentTypeAcceptable</Declaration>
			
			
			<Anchor>//api/name/contentTypeAcceptable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setLastRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURLRequest *lastRequest</Declaration>
			
			
			<Anchor>//api/name/lastRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/lastRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSURLRequest *lastRequest</Declaration>
			
			
			<Anchor>//api/name/lastRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setLastResponse:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSHTTPURLResponse *lastResponse</Declaration>
			
			
			<Anchor>//api/name/lastResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/lastResponse</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSHTTPURLResponse *lastResponse</Declaration>
			
			
			<Anchor>//api/name/lastResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setResponseBody:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSData *responseBody</Declaration>
			
			
			<Anchor>//api/name/responseBody</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/responseBody</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSData *responseBody</Declaration>
			
			
			<Anchor>//api/name/responseBody</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/dealloc</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfAuthenticationDelegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfAuthenticationDelegate</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfAuthenticationDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfAcceptableStatusCodes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfAcceptableStatusCodes</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfAcceptableStatusCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfAcceptableContentTypes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfAcceptableContentTypes</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfAcceptableContentTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfResponseOutputStream</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfResponseOutputStream</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfResponseOutputStream</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfDefaultResponseSize</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfDefaultResponseSize</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfDefaultResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANQHTTPOperation/automaticallyNotifiesObserversOfMaximumResponseSize</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)automaticallyNotifiesObserversOfMaximumResponseSize</Declaration>
			
			
			<Anchor>//api/name/automaticallyNotifiesObserversOfMaximumResponseSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/operationDidStart</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>- (void)operationDidStart</Declaration>
			
			
			<Anchor>//api/name/operationDidStart</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/operationWillFinish</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>- (void)operationWillFinish</Declaration>
			
			
			<Anchor>//api/name/operationWillFinish</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/finishWithError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>- (void)finishWithError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/finishWithError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/debugDelayTimerDone:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>- (void)debugDelayTimerDone:(NSTimer *)timer</Declaration>
			
			
			<Anchor>//api/name/debugDelayTimerDone:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:canAuthenticateAgainstProtectionSpace:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace</Declaration>
			
			
			<Anchor>//api/name/connection:canAuthenticateAgainstProtectionSpace:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:didReceiveAuthenticationChallenge:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge</Declaration>
			
			
			<Anchor>//api/name/connection:didReceiveAuthenticationChallenge:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:willSendRequest:redirectResponse:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (NSURLRequest *)connection:(NSURLConnection *)connection willSendRequest:(NSURLRequest *)request redirectResponse:(NSURLResponse *)response</Declaration>
			
			
			<Anchor>//api/name/connection:willSendRequest:redirectResponse:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:didReceiveResponse:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response</Declaration>
			
			
			<Anchor>//api/name/connection:didReceiveResponse:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:didReceiveData:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data</Declaration>
			
			
			<Anchor>//api/name/connection:didReceiveData:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connectionDidFinishLoading:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (void)connectionDidFinishLoading:(NSURLConnection *)connection</Declaration>
			
			
			<Anchor>//api/name/connectionDidFinishLoading:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/connection:didFailWithError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.h</DeclaredIn>			
			
			<Declaration>- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/connection:didFailWithError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setConnection:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSURLConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/connection</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSURLConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setFirstData:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL firstData</Declaration>
			
			
			<Anchor>//api/name/firstData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/firstData</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL firstData</Declaration>
			
			
			<Anchor>//api/name/firstData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setDataAccumulator:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableData *dataAccumulator</Declaration>
			
			
			<Anchor>//api/name/dataAccumulator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/dataAccumulator</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableData *dataAccumulator</Declaration>
			
			
			<Anchor>//api/name/dataAccumulator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANQHTTPOperation/setDebugDelayTimer:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSTimer *debugDelayTimer</Declaration>
			
			
			<Anchor>//api/name/debugDelayTimer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANQHTTPOperation/debugDelayTimer</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANQHTTPOperation.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSTimer *debugDelayTimer</Declaration>
			
			
			<Anchor>//api/name/debugDelayTimer</Anchor>
		</Token>
		
	</File>
</Tokens>