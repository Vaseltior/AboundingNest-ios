<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ANTextManipulationHyphenator.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ANTextManipulationHyphenator</TokenIdentifier>
			<Abstract type="html">There is a proven algorithm for hyphenation, for TeX-documents by Liang,
called Liang's Algorithm.</Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>
			
			<NodeRef refid="8"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/setSep:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *sep</Declaration>
			
			
			<Anchor>//api/name/sep</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANTextManipulationHyphenator/sep</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *sep</Declaration>
			
			
			<Anchor>//api/name/sep</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/setExcmap:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableDictionary *, *excmap</Declaration>
			
			
			<Anchor>//api/name/excmap</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANTextManipulationHyphenator/excmap</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableDictionary *, *excmap</Declaration>
			
			
			<Anchor>//api/name/excmap</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/initWithPatternFile:</TokenIdentifier>
			<Abstract type="html">Creates a TexHyphenator without exceptions</Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (void)initWithPatternFile:(NSString *)pathToPatternFile</Declaration>
			<Parameters>
				<Parameter>
					<Name>pathToPatternFile</Name>
					<Abstract type="html">Path to file with patterns, separated line by
line</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithPatternFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/hyphenate:</TokenIdentifier>
			<Abstract type="html">Method to hyphenate word</Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)hyphenate:(NSString *)word</Declaration>
			<Parameters>
				<Parameter>
					<Name>word</Name>
					<Abstract type="html">Word to hyphenate</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Collection Collection of strings representing the hyphens</Abstract></ReturnValue>
			<Anchor>//api/name/hyphenate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/setPatternFile:</TokenIdentifier>
			<Abstract type="html">Method to set the file containing the patterns line by line, separated by</Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (void)setPatternFile:(NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">Path to file containing pattern.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setPatternFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/setExceptionFile:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (void)setExceptionFile:(NSString *)path</Declaration>
			
			
			<Anchor>//api/name/setExceptionFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/addPattern:</TokenIdentifier>
			<Abstract type="html">A pattern consists of letters, numbers and dots, e.g.: .mis2s1 Even
numbers indicate an unacceptable location for a hyphen, odd numbers
indicate an acceptable location. Higher numbers are superior over lower
numbers.</Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (BOOL)addPattern:(NSString *)aPattern</Declaration>
			
			
			<Anchor>//api/name/addPattern:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/addException:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>- (BOOL)addException:(NSString *)aPattern</Declaration>
			
			
			<Anchor>//api/name/addException:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANTextManipulationHyphenator/sharedHyphenator</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.h</DeclaredIn>			
			
			<Declaration>+ (ANTextManipulationHyphenator *)sharedHyphenator</Declaration>
			
			
			<Anchor>//api/name/sharedHyphenator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/init</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.m</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANTextManipulationHyphenator/dealloc</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ANTextManipulationHyphenator.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
	</File>
</Tokens>